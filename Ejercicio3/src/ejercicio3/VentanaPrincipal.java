package ejercicio3;

import java.math.BigInteger;
import java.util.Date;
import javax.swing.JOptionPane;

public class VentanaPrincipal extends javax.swing.JFrame {

    BigInteger[] a = new BigInteger[4];
    BigInteger[] b = new BigInteger[4];
    BigInteger[] m = new BigInteger[4];
    BigInteger auxMCD = new BigInteger("0");
    BigInteger auxAbs = new BigInteger("0");
    BigInteger auxA = new BigInteger("0");
    BigInteger auxB = new BigInteger("0");
    long inicio;
    long fin;
    long tiempo;

    public VentanaPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
 
        

       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        a0 = new javax.swing.JTextField();
        m0 = new javax.swing.JTextField();
        a1 = new javax.swing.JTextField();
        m1 = new javax.swing.JTextField();
        a2 = new javax.swing.JTextField();
        m2 = new javax.swing.JTextField();
        a3 = new javax.swing.JTextField();
        m3 = new javax.swing.JTextField();
        botonEjecutar = new javax.swing.JButton();
        b1 = new javax.swing.JTextField();
        b2 = new javax.swing.JTextField();
        b3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        b0 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        a0.setText("15");
        a0.setMinimumSize(new java.awt.Dimension(18, 20));

        m0.setText("9");

        a1.setText("8");

        m1.setText("21");

        a2.setText("11");

        m2.setText("16");

        a3.setText("6");

        m3.setText("22");

        botonEjecutar.setText("Ejecutar");
        botonEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEjecutarActionPerformed(evt);
            }
        });

        b1.setText("11");

        b2.setText("7");

        b3.setText("10");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("a");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("b");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("(mod m )");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("â‰¡");

        b0.setText("6");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Introduzca el sistema de congruencias");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonEjecutar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(jLabel1)
                                        .addGap(49, 49, 49)
                                        .addComponent(jLabel4)
                                        .addGap(58, 58, 58)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(a0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(a1, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(a3, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(a2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(138, 138, 138)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(b0)
                                            .addComponent(b1)
                                            .addComponent(b2)
                                            .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(m0, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(m1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(m2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(13, 13, 13))
                                    .addComponent(jLabel3))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(botonEjecutar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEjecutarActionPerformed
        a[0] = new BigInteger(a0.getText().toString());
        a[1] = new BigInteger(a1.getText().toString());
        a[2] = new BigInteger(a2.getText().toString());
        a[3] = new BigInteger(a3.getText().toString());
        b[0] = new BigInteger(b0.getText().toString());
        b[1] = new BigInteger(b1.getText().toString());
        b[2] = new BigInteger(b2.getText().toString());
        b[3] = new BigInteger(b3.getText().toString());
        m[0] = new BigInteger(m0.getText().toString());
        m[1] = new BigInteger(m1.getText().toString());
        m[2] = new BigInteger(m2.getText().toString());
        m[3] = new BigInteger(m3.getText().toString());
        
        inicio = (new Date()).getTime();
        SistemaCongruencias();
        fin = (new Date()).getTime();

        tiempo = fin - inicio;

        
        JOptionPane.showMessageDialog(this, "La solucion al sistema de congruencias es: \n "
                                + "x = " + b[0] + " + " + m[0] + "k \n"
                + "Tiempo invertido: "+tiempo+" segundos", "Resultado", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_botonEjecutarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
        
    }
    
    public void SistemaCongruencias(){
        
        BigInteger auxInv = new BigInteger("0");
        BigInteger auxA1 = new BigInteger("0");
        BigInteger auxA2 = new BigInteger("0");
        BigInteger auxA3 = new BigInteger("0");
        BigInteger auxDiv = new BigInteger("0");


        // Reducimos todo modulo m
        a[0] = a[0].mod(m[0]);
        b[0] = a[0].mod(m[0]);
        
        auxDiv = a[0].gcd(m[0]);
        
        // Primera comprobacion para saber si la congruencia primera 
        // tiene solucion
        if (b[0].remainder(auxDiv).compareTo(new BigInteger("0")) == 0) {
            
            // Dividimos todo por el mcd
            a[0] = a[0].divide(auxDiv);
            b[0] = b[0].divide(auxDiv);
            m[0] = m[0].divide(auxDiv);
            
            //Calculamos el inverso
            auxInv = a[0].modInverse(m[0]);

            //Multiplicamos todo por el inverso
            a[0] = a[0].multiply(auxInv).mod(m[0]);
            b[0] = b[0].multiply(auxInv).mod(m[0]);


            //Guardamos el valor de a[1] antes de obtener el nuevo
            auxA1 = a[1];

            //Sustituimos la primera ec en la segunda
            a[1] = a[1].multiply(m[0]).mod(m[1]);
            b[1] = (b[1].subtract(auxA1.multiply(b[0]))).mod(m[1]);

            //Calculamos mcd de a[1] y m[1] e intentamos dividir 
            //toda la segunda ecuacion
            auxDiv = a[1].gcd(m[1]);

            if (b[1].remainder(auxDiv).compareTo(new BigInteger("0")) == 0) {
                a[1] = a[1].divide(auxDiv);
                b[1] = b[1].divide(auxDiv);
                m[1] = m[1].divide(auxDiv);


                //Calculamos el inverso de la segunda ecuacion
                //System.out.println(a[1]+" "+b[1]+" "+m[1]);
                auxInv = a[1].modInverse(m[1]);

                //Multiplicamos todo por el inverso
                a[1] = a[1].multiply(auxInv).mod(m[1]);
                b[1] = b[1].multiply(auxInv).mod(m[1]);

                
                b[0] = b[0].add(m[0].multiply(b[1]));
                m[0] = m[0].multiply(m[1]);

                
                //Sustituimos el valor de x en la tercera ec.
                auxA2 = a[2];
                a[2] = a[2].multiply(m[0]).mod(m[2]);
                b[2] = (b[2].subtract(auxA2.multiply(b[0]))).mod(m[2]);

                
                auxDiv = a[2].gcd(m[2]);

                if (b[2].remainder(auxDiv).compareTo(new BigInteger("0")) == 0) {
                    a[2] = a[2].divide(auxDiv);
                    b[2] = b[2].divide(auxDiv);
                    m[2] = m[2].divide(auxDiv);

                    //Calculamos el inverso de la tercera ecuacion
                    auxInv = a[2].modInverse(m[2]);

                    //Multiplicamos todo por el inverso
                    a[2] = a[2].multiply(auxInv).mod(m[2]);
                    b[2] = b[2].multiply(auxInv).mod(m[2]);

                   
                    b[0] = b[0].add(m[0].multiply(b[2]));
                    m[0] = m[0].multiply(m[2]);


                    //Sustituimos el valor de x en la cuarta ec.
                    auxA3 = a[3];
                    a[3] = a[3].multiply(m[0]).mod(m[3]);
                    b[3] = (b[3].subtract(auxA3.multiply(b[0]))).mod(m[3]);

                    

                    //Calculamos mcd de a[3] y m[3] e intentamos dividir 
                    //toda la segunda ecuacion
                    auxDiv = a[3].gcd(m[3]);

                    if (b[3].remainder(auxDiv).compareTo(new BigInteger("0")) == 0) {
                        a[3] = a[3].divide(auxDiv);
                        b[3] = b[3].divide(auxDiv);
                        m[3] = m[3].divide(auxDiv);
                        
                        
                        //Calculamos el inverso de la cuarta ecuacion
                        auxInv = a[3].modInverse(m[3]);

                        //Multiplicamos todo por el inverso
                        a[3] = a[3].multiply(auxInv).mod(m[3]);
                        b[3] = b[3].multiply(auxInv).mod(m[3]);
                        
                        
                        
                        b[0] = b[0].add(m[0].multiply(b[3]));
                        m[0] = m[0].multiply(m[3]);

                        
                        
                        
                    } else {
                        JOptionPane.showMessageDialog(this, "La congruencia no tiene solucion", "Error", JOptionPane.ERROR_MESSAGE);
                    }




                } else {
                    JOptionPane.showMessageDialog(this, "La congruencia no tiene solucion", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "La congruencia no tiene solucion", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "La congruencia no tiene solucion", "Error", JOptionPane.ERROR_MESSAGE);
        }
    
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a0;
    private javax.swing.JTextField a1;
    private javax.swing.JTextField a2;
    private javax.swing.JTextField a3;
    private javax.swing.JTextField b0;
    private javax.swing.JTextField b1;
    private javax.swing.JTextField b2;
    private javax.swing.JTextField b3;
    private javax.swing.JButton botonEjecutar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField m0;
    private javax.swing.JTextField m1;
    private javax.swing.JTextField m2;
    private javax.swing.JTextField m3;
    // End of variables declaration//GEN-END:variables
}
